#Set items cannot be removed after the set has been created. - False

#A set cannot have two items with the same value. - True

#Select the correct function for returning the number of items in a set:
fruits = {'apple', 'banana', 'cherry'}
print(len(fruits))





#True or False. You can access set items by referring to the index. - False

#Check if "apple" is present in the fruits set.
fruits = {"apple", "banana", "cherry"}
if "apple" in fruits:
  print("Yes, apple is a fruit!")

#What will be the printed result?
thisset = {'apple', 'banana', 'cherry'}
print('banana' not in thisset)                      #False




#What is a correct syntax for adding items to a set? - add()


#Use the add method to add "orange" to the fruits set.
fruits = {"apple", "banana", "cherry"}
fruits.add("orange")




#Use the correct method to add multiple items (more_fruits) to the fruits set.
fruits = {"apple", "banana", "cherry"}
more_fruits = ["orange", "mango", "grapes"]
fruits.update(more_fruits)

#What is a correct syntax for looping through the items of a set?
for x in {'apple', 'banana', 'cherry'}:
  print(x)

#Insert the missing part of the for loop below to loop through the items of a set.
myset = {'apple', 'banana', 'cherry'}
for x in myset:
  print(x)

#True or False. Sets are unordered, so when you loop through the items, the order will be totally random. - True


#What is a correct syntax for joining set1 and set2 into set3?
set3 = join(set1, set2)


#What is a correct syntax for joining multiple sets into one new set called set5?
set5 = set1 | set2 | set3 | set4

#There are many ways to join sets in Python. Which one of the following methods keeps ONLY the duplicates?
intersection()
