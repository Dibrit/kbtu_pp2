#Whis one of theese is a dictionary? - x = {'type' : 'fruit', 'name' : 'banana'}

#Dictionary items cannot be removed after the dictionary has been created. - False


#A dictionary cannot have two keys with the same name. - True

#Select the correct function to print the number of key/value pairs in the dictionary:
x = {'type' : 'fruit', 'name' : 'banana'}
print(len(x))



#What is a correct syntax for changing the type from fruit to berry?
x = {'type' : 'fruit', 'name' : 'banana'}
x['type'] = 'berry'

#Change the "year" value from 1964 to 2020.
car =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car["year"] = 2000

#What is a correct syntax for changing the name from banana to apple?
x = {'type' : 'fruit', 'name' : 'banana'}
x.update({'name': 'apple'})



#What is a dictionary method for removing an item from a dictionary?
pop()

#Use the pop method to remove "model" from the car dictionary.
car =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car.pop("model")

#Use the clear method to empty the car dictionary.

car =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
car.clear()

#Insert a correct syntax for removing the 'color' item of the dictionary:
myvar = {'type' : 'fruit', 'name' : 'apple', 'color' : 'red'}
del(myvar['color'])

#What is a correct syntax for looping through the values of this dictionary:
x = {'type' : 'fruit', 'name' : 'apple'}


#What is a correct syntax for looping through the keys AND values of this dictionary:
x = {'type' : 'fruit', 'name' : 'apple'}   
for y, z in x.items():
  print(y, z)

#Insert the missing part of the for loop below to loop through the items of a set.
myset = {'apple', 'banana', 'cherry'}
for x in myset:
  print(x)

#What is a correct syntax for looping through the keys of this dictionary:
x = {'type' : 'fruit', 'name' : 'apple'}
for y in x.keys():
  print(y)	



#What is a correct syntax for making a copy of this dictionary:
x = {'type' : 'fruit', 'name' : 'apple'}
y = x.copy()	

#One of these codes is NOT a correct way of making a copy of a dictionary named x, which one:
y = x.duplicate()

#True or False. Copied dictionaries will not be able to change its item values. - False


#what will be a correct syntax for printing the name 'May'?
a = {'name' : 'John', 'age' : '20'}
b = {'name' : 'May', 'age' : '23'}
customers = {'c1' : a, 'c2' : b}

print(customers['c2']['name']

#Insert the missing part to loop through the keys and values of all nested dictionaries:
a = {'name' : 'John', 'age' : 20}
b = {'name' : 'May', 'age' : 23}
customers = {'c1' : a, 'c2' : b}
for x, obj in customers.items():
  print(x)
    
  for y in obj:
    print(y + ':', obj[y])

#True or False. A dictionary can only have one level of nested dictionaries. - False